@use 'root' as *;
@use 'variable' as *;
@use 'sass:map';
@use 'sass:math';

// font-size
@function font-size($key) {
  @return map.get($font-size, $key);
}

// font-family
@function font-family($key) {
  @return map.get($font-family, $key);
}

// font-weight
@function font-weight($key) {
  @return map.get($font-weight, $key);
}

// letter-spacing
@function letter-spacing($key) {
  @return map.get($letter-spacing, $key);
}

// line-height
@function line-height($key) {
  @return map.get($line-height, $key);
}

// color
@function color($key) {
  @return map.get($color, $key);
}

// spacing
@function spacing($key) {
  @return map.get($spacing, $key);
}

// easing
@function easing($key) {
  @return map.get($easing, $key);
}

// image
@function image($name) {
  @return url('#{$image-path}/#{$name}');
}

// responsive-clamp
@function responsive-clamp(
  $min-size,
  $max-size,
  $min-container: rem(375),
  $max-container: rem(1200)
) {
  $min-size: strip-unit($min-size);
  $max-size: strip-unit($max-size);
  $min-container: strip-unit($min-container);
  $max-container: strip-unit($max-container);
  $slope: math.div(($max-size - $min-size), ($max-container - $min-container));
  $y-intercept: $min-size - $slope * $min-container;
  @return clamp(#{$min-size}rem, #{$y-intercept}rem + #{$slope * 100}vw, #{$max-size}rem);
}
